name: Build and Publish Jaska Dev Images

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'Choose Dockerfile to build'
        required: true
        default: 'base'
        type: choice
        options:
          - base
          - lidar

jobs:
  build-docker-images:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/haitomatic/jaska-dev
          tags: |
            type=raw,value=${{ github.event.inputs.dockerfile || 'base' }}
            type=raw,value=${{ github.event.inputs.dockerfile || 'base' }}-{{date 'YYYYMMDD'}}
            type=ref,event=branch,suffix=-${{ github.event.inputs.dockerfile || 'base' }}
            type=ref,event=pr,suffix=-${{ github.event.inputs.dockerfile || 'base' }}
            type=semver,pattern={{version}},suffix=-${{ github.event.inputs.dockerfile || 'base' }}
          labels: |
            org.opencontainers.image.title=Jaska Development Environment (${{ github.event.inputs.dockerfile || 'base' }})
            org.opencontainers.image.description=ROS2 Jazzy development environment for Jaska robot (${{ github.event.inputs.dockerfile || 'base' }} configuration)
            org.opencontainers.image.source=https://github.com/haitomatic/jaska-dev
            org.opencontainers.image.url=https://github.com/haitomatic/jaska-dev
            org.opencontainers.image.documentation=https://github.com/haitomatic/jaska-dev
            org.opencontainers.image.vendor=haitomatic

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Dockerfile
        id: dockerfile
        run: |
          case "${{ github.event.inputs.dockerfile || 'base' }}" in
            "base")
              echo "file=Dockerfile.base" >> $GITHUB_OUTPUT
              ;;
            "lidar")
              echo "file=Dockerfile.lidar" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "file=Dockerfile.base" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          file: ${{ steps.dockerfile.outputs.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max